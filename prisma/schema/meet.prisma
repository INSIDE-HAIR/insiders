// Meet API Models - ARQUITECTURA EXPANDIDA
// Almacena IDs de spaces + sistema de Tags y Groups jerárquicos
// Datos de Meet API vienen frescos, organización via tags/groups

model MeetSpace {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  spaceId     String    @unique // ID del space en Google Meet (ej: "JOsxkyPchrEB")
  displayName String?   // Solo para UX en listado (opcional)
  createdAt   DateTime  @default(now())
  createdBy   String?   // Usuario que creó el space
  lastSyncAt  DateTime? // Última consulta a API (para referencia)
  
  // Campos de fecha opcionales para gestión temporal
  startDate   DateTime? // Fecha de inicio opcional (null = siempre disponible)
  endDate     DateTime? // Fecha de fin opcional (null = sin fecha límite)
  
  // Relaciones con tags (múltiples)
  spaceTags   MeetSpaceTag[]
  
  // Relaciones con groups (múltiples)
  spaceGroups MeetSpaceGroup[]
  
  @@index([createdBy])
  @@index([createdAt])
  @@index([startDate])
  @@index([endDate])
  @@index([displayName])
}

// MeetTag - Etiquetas jerárquicas para clasificación y filtrado rápido
model MeetTag {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   // "Webinar", "Training", "Cliente A", "Marketing > Campañas"
  slug        String   @unique // "webinar", "training", "cliente-a", "marketing-campanas"
  internalDescription String?  // Descripción interna para el equipo
  publicDescription String?    // Descripción pública para clientes
  color       String   @default("#3B82F6") // Color hex para badges en UI
  icon        String?  // Nombre de heroicon opcional (ej: "VideoCameraIcon")
  
  // Jerarquía auto-referencial (sin límite de niveles)
  parentId    String?  @db.ObjectId
  parent      MeetTag? @relation("TagHierarchy", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children    MeetTag[] @relation("TagHierarchy")
  
  // Path completo para navegación eficiente
  path        String   // "/marketing/campanas/q1" para jerarquía
  level       Int      @default(0) // Nivel en jerarquía (0=root, 1=child, etc.)
  
  // Organización y orden
  customId    String?  // ID personalizado para identificación externa
  order       Int      @default(0) // Orden de visualización dentro del mismo nivel
  
  // Metadata
  createdAt   DateTime @default(now())
  createdBy   String?  // Usuario que creó el tag
  isActive    Boolean  @default(true)
  
  // Auto-assignment a grupos (tags que se asignan automáticamente)
  assignedToGroups MeetGroupDefaultTag[]
  
  // Relaciones con spaces
  spaceTags   MeetSpaceTag[]
  
  @@index([parentId])
  @@index([path])
  @@index([level])
}

// MeetGroup - Grupos jerárquicos para organización estructural
model MeetGroup {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String     // "Marketing", "Ventas", "Campañas Q1", "Departamento > Área"
  slug        String     @unique // "marketing", "ventas", "campanas-q1", "departamento-area"
  internalDescription String?    // Descripción interna para el equipo
  publicDescription String?      // Descripción pública para clientes
  color       String     @default("#6B7280") // Color para breadcrumbs/navegación
  
  // Jerarquía auto-referencial (sin límite de niveles)
  parentId    String?    @db.ObjectId
  parent      MeetGroup? @relation("GroupHierarchy", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children    MeetGroup[] @relation("GroupHierarchy")
  
  // Path completo para URLs amigables y queries eficientes
  path        String     // "/marketing/campanas/q1" para URLs como /meet/groups/marketing/campanas/q1
  level       Int        @default(0) // Nivel en jerarquía (0=root)
  
  // Organización y orden
  customId    String?    // ID personalizado para identificación externa
  order       Int        @default(0) // Orden de visualización dentro del mismo nivel
  
  // Tags por defecto que se asignan automáticamente a spaces en este grupo
  defaultTags MeetGroupDefaultTag[]
  
  // Metadata
  createdAt   DateTime   @default(now())
  createdBy   String?    // Usuario que creó el grupo
  isActive    Boolean    @default(true)
  
  // Relaciones con spaces (múltiples)
  spaceGroups MeetSpaceGroup[]
  
  // Sistema de Referencias
  allowsReferences Boolean @default(false)  // Si puede ser referenciado por paquetes
  referenceCount   Int     @default(0)      // Contador denormalizado para performance
  
  // Relaciones de referencias
  references       MeetGroupReference[] @relation("GroupReferences")   // Referencias que contiene este grupo
  referencedBy     MeetGroupReference[] @relation("ReferencedBy")      // Referencias que apuntan a este grupo
  
  @@index([parentId])
  @@index([path])
  @@index([level])
  @@index([allowsReferences])
}

// Tabla pivot: MeetSpace ↔ MeetTag (many-to-many)
model MeetSpaceTag {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  
  spaceId   String    @db.ObjectId
  space     MeetSpace @relation(fields: [spaceId], references: [id], onDelete: Cascade)
  
  tagId     String    @db.ObjectId
  tag       MeetTag   @relation(fields: [tagId], references: [id], onDelete: Cascade)
  
  // Metadata sobre la asignación
  createdAt DateTime  @default(now())
  createdBy String?   // Usuario que asignó el tag
  isAutoAssigned Boolean @default(false) // Si fue asignado automáticamente por grupo
  
  @@unique([spaceId, tagId])
  @@index([spaceId])
  @@index([tagId])
}

// Tabla pivot: MeetSpace ↔ MeetGroup (many-to-many)
model MeetSpaceGroup {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  
  spaceId   String     @db.ObjectId
  space     MeetSpace  @relation(fields: [spaceId], references: [id], onDelete: Cascade)
  
  groupId   String     @db.ObjectId
  group     MeetGroup  @relation(fields: [groupId], references: [id], onDelete: Cascade)
  
  // Metadata sobre la asignación
  createdAt DateTime   @default(now())
  createdBy String?    // Usuario que asignó al grupo
  
  @@unique([spaceId, groupId])
  @@index([spaceId])
  @@index([groupId])
}

// Tabla: Tags por defecto que se asignan automáticamente a spaces de un grupo
model MeetGroupDefaultTag {
  id      String     @id @default(auto()) @map("_id") @db.ObjectId
  
  groupId String     @db.ObjectId
  group   MeetGroup  @relation(fields: [groupId], references: [id], onDelete: Cascade)
  
  tagId   String     @db.ObjectId
  tag     MeetTag    @relation(fields: [tagId], references: [id], onDelete: Cascade)
  
  // Metadata
  createdAt DateTime @default(now())
  createdBy String?  // Usuario que configuró el auto-assignment
  
  @@unique([groupId, tagId])
  @@index([groupId])
  @@index([tagId])
}

// Logs simplificados de operaciones para auditoría
model MeetApiLog {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  operation   String   // "create_space", "get_space", "add_member", etc.
  spaceId     String?  // Space ID involucrado (si aplica)
  success     Boolean  // Si la operación fue exitosa
  statusCode  Int?     // Status code HTTP
  errorMsg    String?  // Mensaje de error (si hubo)
  apiVersion  String   @default("v2") // v2, v2beta
  createdAt   DateTime @default(now())
  userId      String?  // Usuario que realizó la operación
  
  @@index([operation])
  @@index([spaceId])
  @@index([createdAt])
}

// Sistema de Referencias entre Grupos (para paquetes que referencian servicios/masters)
model MeetGroupReference {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  
  // Grupo que contiene la referencia (paquete)
  sourceGroupId String    @db.ObjectId
  sourceGroup   MeetGroup @relation("GroupReferences", fields: [sourceGroupId], references: [id], onDelete: Cascade)
  
  // Grupo referenciado (master/servicio)
  targetGroupId String    @db.ObjectId
  targetGroup   MeetGroup @relation("ReferencedBy", fields: [targetGroupId], references: [id], onDelete: Restrict)
  
  // Personalización de la referencia en contexto
  displayName   String?   // Nombre personalizado para mostrar en el paquete
  description   String?   // Descripción específica en el contexto del paquete
  order         Int       @default(0) // Orden de visualización dentro del paquete
  
  // Metadata
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  createdBy     String?   // Usuario que creó la referencia
  updatedAt     DateTime  @updatedAt
  
  @@unique([sourceGroupId, targetGroupId]) // Un paquete no puede referenciar el mismo servicio dos veces
  @@index([sourceGroupId])
  @@index([targetGroupId])
  @@map("meetgroupreferences")
}

