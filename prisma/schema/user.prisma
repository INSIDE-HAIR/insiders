model User {
  id                           String                        @id @default(auto()) @map("_id") @db.ObjectId
  name                         String?                       @default("")
  lastName                     String?                       @default("")
  email                        String                        @unique
  emailVerified                DateTime?
  image                        String?                       @default("")
  password                     String?
  contactNumber                String?                       @default("")
  terms                        Boolean                       @default(true)
  role                         UserRole                      @default(CLIENT)
  isTwoFactorEnabled           Boolean                       @default(false)
  twoFactorConfirmation        TwoFactorConfirmation?
  accounts                     Account[]
  holdedId                     String?                       @unique
  createdHoldedSyncAt          DateTime?
  lastHoldedSyncAt             DateTime?
  docs                         Document[]
  holdedData                   HoldedData?
  createdAt                    DateTime                      @default(now())
  updatedAt                    DateTime                      @updatedAt
  lastLogin                    DateTime?                     @default(now())
  // Offers             Offer[]
  salesFields                  SalesField[]
  clientsFields                ClientField[]
  consultingAndMentoringFields ConsultingAndMentoringField[]
  trainingsFields              TrainingField[]
  marketingFields              MarketingField[]
  creativitiesFields           CreativityField[]
  CustomField                  CustomField[]
  groups                       Group[]                       @relation(fields: [groupIds], references: [id])
  groupIds                     String[]                      @db.ObjectId
  tags                         Tag[]                         @relation(fields: [tagIds], references: [id])
  tagIds                       String[]                      @db.ObjectId
  resources                    Resource[]                    @relation(fields: [resourceIds], references: [id])
  resourceIds                  String[]                      @db.ObjectId
}

enum UserRole {
  ADMIN
  CLIENT
  EMPLOYEE
}

model Group {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  users       User[]   @relation(fields: [userIds], references: [id])
  userIds     String[] @db.ObjectId
}

model Tag {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  users       User[]   @relation(fields: [userIds], references: [id])
  userIds     String[] @db.ObjectId
}

model Resource {
  id      String       @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  type    ResourceType
  users   User[]       @relation(fields: [userIds], references: [id])
  userIds String[]     @db.ObjectId
}

enum ResourceType {
  SERVICE // Servicios, revisar el archivo de services.prisma
  PRODUCT // Productos, revisar el archivo de products.prisma
}

